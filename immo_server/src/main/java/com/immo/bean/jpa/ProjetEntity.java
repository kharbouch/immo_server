/*
 * Created on 29 dï¿½c. 2015 ( Time 20:53:24 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.immo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "PROJET"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="PROJET", schema="USERIMMO" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ProjetEntity.countAll", query="SELECT COUNT(x) FROM ProjetEntity x" )
} )
public class ProjetEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(generator="my_seq")
    @SequenceGenerator(name="my_seq",sequenceName="PROJET_SEQ", allocationSize=1)
    @Column(name="ID", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="LIBELLE", length=100)
    private String     libelle      ;

    @Column(name="DESCRIPTION", length=200)
    private String     description  ;

    @Column(name="VILLE_PROJET", length=200)
    private Long     villeProjet  ;

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_CREATION")
    private Date       dateCreation ;

    @Temporal(TemporalType.DATE)
    @Column(name="DATE_MAJ")
    private Date       dateMaj      ;

    @Column(name="CODE_PROJET", length=30)
    private String     codeProjet   ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="projet", targetEntity=TrancheEntity.class)
    private List<TrancheEntity> listOfTranche;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ProjetEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : LIBELLE ( VARCHAR2 ) 
    public void setLibelle( String libelle ) {
        this.libelle = libelle;
    }
    public String getLibelle() {
        return this.libelle;
    }

    //--- DATABASE MAPPING : DESCRIPTION ( VARCHAR2 ) 
    public void setDescription( String description ) {
        this.description = description;
    }
    public String getDescription() {
        return this.description;
    }

    //--- DATABASE MAPPING : VILLE_PROJET ( VARCHAR2 ) 
    public void setVilleProjet( Long villeProjet ) {
        this.villeProjet = villeProjet;
    }
    public Long getVilleProjet() {
        return this.villeProjet;
    }

    //--- DATABASE MAPPING : DATE_CREATION ( DATE ) 
    public void setDateCreation( Date dateCreation ) {
        this.dateCreation = dateCreation;
    }
    public Date getDateCreation() {
        return this.dateCreation;
    }

    //--- DATABASE MAPPING : DATE_MAJ ( DATE ) 
    public void setDateMaj( Date dateMaj ) {
        this.dateMaj = dateMaj;
    }
    public Date getDateMaj() {
        return this.dateMaj;
    }

    //--- DATABASE MAPPING : CODE_PROJET ( VARCHAR2 ) 
    public void setCodeProjet( String codeProjet ) {
        this.codeProjet = codeProjet;
    }
    public String getCodeProjet() {
        return this.codeProjet;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfTranche( List<TrancheEntity> listOfTranche ) {
        this.listOfTranche = listOfTranche;
    }
    public List<TrancheEntity> getListOfTranche() {
        return this.listOfTranche;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(libelle);
        sb.append("|");
        sb.append(description);
        sb.append("|");
        sb.append(villeProjet);
        sb.append("|");
        sb.append(dateCreation);
        sb.append("|");
        sb.append(dateMaj);
        sb.append("|");
        sb.append(codeProjet);
        return sb.toString(); 
    } 

}
