/*
 * Created on 29 dï¿½c. 2015 ( Time 20:53:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.immo.bean.Dossier;
import com.immo.bean.Module;
import com.immo.bean.ModuleProfil;
import com.immo.bean.Profil;
import com.immo.bean.Recette;
import com.immo.bean.jpa.DossierEntity;
import com.immo.bean.jpa.ModuleEntity;
import com.immo.bean.jpa.ModuleProfilEntity;
import com.immo.bean.jpa.ProfilEntity;
import com.immo.bean.jpa.RecetteEntity;

import java.util.Date;
import com.immo.business.service.ModuleProfilService;
import com.immo.business.service.mapping.DossierServiceMapper;
import com.immo.business.service.mapping.ModuleProfilServiceMapper;
import com.immo.business.service.mapping.ModuleServiceMapper;
import com.immo.business.service.mapping.ProfilServiceMapper;
import com.immo.data.repository.jpa.ModuleProfilJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ModuleProfilService
 */
@Component
@Transactional
public class ModuleProfilServiceImpl implements ModuleProfilService {

	@Resource
	private ModuleProfilJpaRepository moduleProfilJpaRepository;

	@Resource
	private ModuleProfilServiceMapper moduleProfilServiceMapper;
	
	@Resource
	private ProfilServiceMapper profilServiceMapper;
	
	@Resource
	private ModuleServiceMapper moduleServiceMapper;
	
	@Override
	public ModuleProfil findById(Long id) {
		ModuleProfilEntity moduleProfilEntity = moduleProfilJpaRepository.findOne(id);
		return moduleProfilServiceMapper.mapModuleProfilEntityToModuleProfil(moduleProfilEntity);
	}

	@Override
	public List<ModuleProfil> findAll() {
		Iterable<ModuleProfilEntity> entities = moduleProfilJpaRepository.findAll();
		List<ModuleProfil> beans = new ArrayList<ModuleProfil>();
		for(ModuleProfilEntity moduleProfilEntity : entities) {
			beans.add(moduleProfilServiceMapper.mapModuleProfilEntityToModuleProfil(moduleProfilEntity));
		}
		return beans;
	}

	@Override
	public ModuleProfil save(ModuleProfil moduleProfil) {
		return update(moduleProfil) ;
	}

	@Override
	public ModuleProfil create(ModuleProfil moduleProfil) {
		ModuleProfilEntity moduleProfilEntity = moduleProfilJpaRepository.findOne(moduleProfil.getId());
		if( moduleProfilEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		moduleProfilEntity = new ModuleProfilEntity();
		moduleProfilServiceMapper.mapModuleProfilToModuleProfilEntity(moduleProfil, moduleProfilEntity);
		ModuleProfilEntity moduleProfilEntitySaved = moduleProfilJpaRepository.save(moduleProfilEntity);
		return moduleProfilServiceMapper.mapModuleProfilEntityToModuleProfil(moduleProfilEntitySaved);
	}

	@Override
	public ModuleProfil update(ModuleProfil moduleProfil) {
		ModuleProfilEntity moduleProfilEntity = moduleProfilJpaRepository.findOne(moduleProfil.getId());
		moduleProfilServiceMapper.mapModuleProfilToModuleProfilEntity(moduleProfil, moduleProfilEntity);
		ModuleProfilEntity moduleProfilEntitySaved = moduleProfilJpaRepository.save(moduleProfilEntity);
		return moduleProfilServiceMapper.mapModuleProfilEntityToModuleProfil(moduleProfilEntitySaved);
	}

	@Override
	public void delete(Long id) {
		moduleProfilJpaRepository.delete(id);
	}

	public ModuleProfilJpaRepository getModuleProfilJpaRepository() {
		return moduleProfilJpaRepository;
	}

	public void setModuleProfilJpaRepository(ModuleProfilJpaRepository moduleProfilJpaRepository) {
		this.moduleProfilJpaRepository = moduleProfilJpaRepository;
	}

	public ModuleProfilServiceMapper getModuleProfilServiceMapper() {
		return moduleProfilServiceMapper;
	}

	public void setModuleProfilServiceMapper(ModuleProfilServiceMapper moduleProfilServiceMapper) {
		this.moduleProfilServiceMapper = moduleProfilServiceMapper;
	}

	@Override
	public List<Module> findModuleByProfil(Profil p) {
		ProfilEntity profilEntity = new ProfilEntity();
		profilServiceMapper.mapProfilToProfilEntity(p, profilEntity);
		Iterable<ModuleEntity> entities = moduleProfilJpaRepository.findModuleByProfil(profilEntity);
		List<Module> beans = new ArrayList<Module>();
		for(ModuleEntity moduleEntity : entities) {
			beans.add(moduleServiceMapper.mapModuleEntityToModule(moduleEntity));
		}
		return beans;
	}
}
