/*
 * Created on 29 déc. 2015 ( Time 20:53:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.immo.bean.Profil;
import com.immo.bean.jpa.ProfilEntity;
import java.util.Date;
import java.util.List;
import com.immo.business.service.ProfilService;
import com.immo.business.service.mapping.ProfilServiceMapper;
import com.immo.data.repository.jpa.ProfilJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ProfilService
 */
@Component
@Transactional
public class ProfilServiceImpl implements ProfilService {

	@Resource
	private ProfilJpaRepository profilJpaRepository;

	@Resource
	private ProfilServiceMapper profilServiceMapper;
	
	@Override
	public Profil findById(Long id) {
		ProfilEntity profilEntity = profilJpaRepository.findOne(id);
		return profilServiceMapper.mapProfilEntityToProfil(profilEntity);
	}

	@Override
	public List<Profil> findAll() {
		Iterable<ProfilEntity> entities = profilJpaRepository.findAll();
		List<Profil> beans = new ArrayList<Profil>();
		for(ProfilEntity profilEntity : entities) {
			beans.add(profilServiceMapper.mapProfilEntityToProfil(profilEntity));
		}
		return beans;
	}

	@Override
	public Profil save(Profil profil) {
		return update(profil) ;
	}

	@Override
	public Profil create(Profil profil) {
		ProfilEntity profilEntity = profilJpaRepository.findOne(profil.getId());
		if( profilEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		profilEntity = new ProfilEntity();
		profilServiceMapper.mapProfilToProfilEntity(profil, profilEntity);
		ProfilEntity profilEntitySaved = profilJpaRepository.save(profilEntity);
		return profilServiceMapper.mapProfilEntityToProfil(profilEntitySaved);
	}

	@Override
	public Profil update(Profil profil) {
		ProfilEntity profilEntity = profilJpaRepository.findOne(profil.getId());
		profilServiceMapper.mapProfilToProfilEntity(profil, profilEntity);
		ProfilEntity profilEntitySaved = profilJpaRepository.save(profilEntity);
		return profilServiceMapper.mapProfilEntityToProfil(profilEntitySaved);
	}

	@Override
	public void delete(Long id) {
		profilJpaRepository.delete(id);
	}

	public ProfilJpaRepository getProfilJpaRepository() {
		return profilJpaRepository;
	}

	public void setProfilJpaRepository(ProfilJpaRepository profilJpaRepository) {
		this.profilJpaRepository = profilJpaRepository;
	}

	public ProfilServiceMapper getProfilServiceMapper() {
		return profilServiceMapper;
	}

	public void setProfilServiceMapper(ProfilServiceMapper profilServiceMapper) {
		this.profilServiceMapper = profilServiceMapper;
	}

}
