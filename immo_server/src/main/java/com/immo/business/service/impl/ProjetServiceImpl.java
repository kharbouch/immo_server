/*
 * Created on 29 dï¿½c. 2015 ( Time 20:53:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.immo.bean.Projet;
import com.immo.bean.jpa.ProjetEntity;
import java.util.Date;
import java.util.List;
import com.immo.business.service.ProjetService;
import com.immo.business.service.mapping.ProjetServiceMapper;
import com.immo.data.repository.jpa.ProjetJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ProjetService
 */
@Component
@Transactional
public class ProjetServiceImpl implements ProjetService {

	@Resource
	private ProjetJpaRepository projetJpaRepository;

	@Resource
	private ProjetServiceMapper projetServiceMapper;
	
	@Override
	public Projet findById(Long id) {
		ProjetEntity projetEntity = projetJpaRepository.findOne(id);
		return projetServiceMapper.mapProjetEntityToProjet(projetEntity);
	}

	@Override
	public List<Projet> findAll() {
		Iterable<ProjetEntity> entities = projetJpaRepository.findAll();
		List<Projet> beans = new ArrayList<Projet>();
		for(ProjetEntity projetEntity : entities) {
			beans.add(projetServiceMapper.mapProjetEntityToProjet(projetEntity));
		}
		return beans;
	}

	@Override
	public Projet save(Projet projet) {
		return update(projet) ;
	}

	@Override
	public Projet create(Projet projet) {
		/*ProjetEntity projetEntity = projetJpaRepository.findOne(projet.getId());
		if( projetEntity != null ) {
			throw new IllegalStateException("already.exists");
		}*/
		ProjetEntity projetEntity = new ProjetEntity();
		projetServiceMapper.mapProjetToProjetEntity(projet, projetEntity);
		ProjetEntity projetEntitySaved = projetJpaRepository.save(projetEntity);
		return projetServiceMapper.mapProjetEntityToProjet(projetEntitySaved);
	}

	@Override
	public Projet update(Projet projet) {
		ProjetEntity projetEntity = projetJpaRepository.findOne(projet.getId());
		projetServiceMapper.mapProjetToProjetEntity(projet, projetEntity);
		ProjetEntity projetEntitySaved = projetJpaRepository.save(projetEntity);
		return projetServiceMapper.mapProjetEntityToProjet(projetEntitySaved);
	}

	@Override
	public void delete(Long id) {
		projetJpaRepository.delete(id);
	}

	public ProjetJpaRepository getProjetJpaRepository() {
		return projetJpaRepository;
	}

	public void setProjetJpaRepository(ProjetJpaRepository projetJpaRepository) {
		this.projetJpaRepository = projetJpaRepository;
	}

	public ProjetServiceMapper getProjetServiceMapper() {
		return projetServiceMapper;
	}

	public void setProjetServiceMapper(ProjetServiceMapper projetServiceMapper) {
		this.projetServiceMapper = projetServiceMapper;
	}

}
