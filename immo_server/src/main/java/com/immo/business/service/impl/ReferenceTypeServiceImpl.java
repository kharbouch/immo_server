/*
 * Created on 29 déc. 2015 ( Time 20:53:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.immo.bean.ReferenceType;
import com.immo.bean.jpa.ReferenceTypeEntity;
import java.util.List;
import com.immo.business.service.ReferenceTypeService;
import com.immo.business.service.mapping.ReferenceTypeServiceMapper;
import com.immo.data.repository.jpa.ReferenceTypeJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ReferenceTypeService
 */
@Component
@Transactional
public class ReferenceTypeServiceImpl implements ReferenceTypeService {

	@Resource
	private ReferenceTypeJpaRepository referenceTypeJpaRepository;

	@Resource
	private ReferenceTypeServiceMapper referenceTypeServiceMapper;
	
	@Override
	public ReferenceType findById(Long id) {
		ReferenceTypeEntity referenceTypeEntity = referenceTypeJpaRepository.findOne(id);
		return referenceTypeServiceMapper.mapReferenceTypeEntityToReferenceType(referenceTypeEntity);
	}

	@Override
	public List<ReferenceType> findAll() {
		Iterable<ReferenceTypeEntity> entities = referenceTypeJpaRepository.findAll();
		List<ReferenceType> beans = new ArrayList<ReferenceType>();
		for(ReferenceTypeEntity referenceTypeEntity : entities) {
			beans.add(referenceTypeServiceMapper.mapReferenceTypeEntityToReferenceType(referenceTypeEntity));
		}
		return beans;
	}

	@Override
	public ReferenceType save(ReferenceType referenceType) {
		return update(referenceType) ;
	}

	@Override
	public ReferenceType create(ReferenceType referenceType) {
		ReferenceTypeEntity referenceTypeEntity = referenceTypeJpaRepository.findOne(referenceType.getId());
		if( referenceTypeEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		referenceTypeEntity = new ReferenceTypeEntity();
		referenceTypeServiceMapper.mapReferenceTypeToReferenceTypeEntity(referenceType, referenceTypeEntity);
		ReferenceTypeEntity referenceTypeEntitySaved = referenceTypeJpaRepository.save(referenceTypeEntity);
		return referenceTypeServiceMapper.mapReferenceTypeEntityToReferenceType(referenceTypeEntitySaved);
	}

	@Override
	public ReferenceType update(ReferenceType referenceType) {
		ReferenceTypeEntity referenceTypeEntity = referenceTypeJpaRepository.findOne(referenceType.getId());
		referenceTypeServiceMapper.mapReferenceTypeToReferenceTypeEntity(referenceType, referenceTypeEntity);
		ReferenceTypeEntity referenceTypeEntitySaved = referenceTypeJpaRepository.save(referenceTypeEntity);
		return referenceTypeServiceMapper.mapReferenceTypeEntityToReferenceType(referenceTypeEntitySaved);
	}

	@Override
	public void delete(Long id) {
		referenceTypeJpaRepository.delete(id);
	}

	public ReferenceTypeJpaRepository getReferenceTypeJpaRepository() {
		return referenceTypeJpaRepository;
	}

	public void setReferenceTypeJpaRepository(ReferenceTypeJpaRepository referenceTypeJpaRepository) {
		this.referenceTypeJpaRepository = referenceTypeJpaRepository;
	}

	public ReferenceTypeServiceMapper getReferenceTypeServiceMapper() {
		return referenceTypeServiceMapper;
	}

	public void setReferenceTypeServiceMapper(ReferenceTypeServiceMapper referenceTypeServiceMapper) {
		this.referenceTypeServiceMapper = referenceTypeServiceMapper;
	}

}
