/*
 * Created on 29 dï¿½c. 2015 ( Time 20:53:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.immo.bean.Client;
import com.immo.bean.Dossier;
import com.immo.bean.TraceDossier;
import com.immo.bean.jpa.ClientEntity;
import com.immo.bean.jpa.DossierEntity;
import com.immo.bean.jpa.TraceDossierEntity;
import java.util.Date;
import com.immo.business.service.TraceDossierService;
import com.immo.business.service.mapping.DossierServiceMapper;
import com.immo.business.service.mapping.TraceDossierServiceMapper;
import com.immo.data.repository.jpa.TraceDossierJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of TraceDossierService
 */
@Component
@Transactional
public class TraceDossierServiceImpl implements TraceDossierService {

	@Resource
	private TraceDossierJpaRepository traceDossierJpaRepository;

	@Resource
	private TraceDossierServiceMapper traceDossierServiceMapper;
	
	@Resource
	private DossierServiceMapper dossierServiceMapper;
	
	@Override
	public TraceDossier findById(Long id) {
		TraceDossierEntity traceDossierEntity = traceDossierJpaRepository.findOne(id);
		return traceDossierServiceMapper.mapTraceDossierEntityToTraceDossier(traceDossierEntity);
	}

	@Override
	public List<TraceDossier> findAll() {
		Iterable<TraceDossierEntity> entities = traceDossierJpaRepository.findAll();
		List<TraceDossier> beans = new ArrayList<TraceDossier>();
		for(TraceDossierEntity traceDossierEntity : entities) {
			beans.add(traceDossierServiceMapper.mapTraceDossierEntityToTraceDossier(traceDossierEntity));
		}
		return beans;
	}	

	@Override
	public TraceDossier save(TraceDossier traceDossier) {
		return update(traceDossier) ;
	}

	@Override
	public TraceDossier create(TraceDossier traceDossier) {
		/*TraceDossierEntity traceDossierEntity = traceDossierJpaRepository.findOne(traceDossier.getId());
		if( traceDossierEntity != null ) {
			throw new IllegalStateException("already.exists");
		}*/
		TraceDossierEntity traceDossierEntity = new TraceDossierEntity();
		traceDossierServiceMapper.mapTraceDossierToTraceDossierEntity(traceDossier, traceDossierEntity);
		TraceDossierEntity echeanceEntitySaved = traceDossierJpaRepository.save(traceDossierEntity);
		return traceDossierServiceMapper.mapTraceDossierEntityToTraceDossier(echeanceEntitySaved);
	}

	@Override
	public TraceDossier update(TraceDossier traceDossier) {
		TraceDossierEntity traceDossierEntity = traceDossierJpaRepository.findOne(traceDossier.getId());
		traceDossierServiceMapper.mapTraceDossierToTraceDossierEntity(traceDossier, traceDossierEntity);
		TraceDossierEntity echeanceEntitySaved = traceDossierJpaRepository.save(traceDossierEntity);
		return traceDossierServiceMapper.mapTraceDossierEntityToTraceDossier(echeanceEntitySaved);
	}

	@Override
	public void delete(Long id) {
		traceDossierJpaRepository.delete(id);
	}

	public TraceDossierJpaRepository getEcheanceJpaRepository() {
		return traceDossierJpaRepository;
	}

	public void setEcheanceJpaRepository(TraceDossierJpaRepository traceDossierJpaRepository) {
		this.traceDossierJpaRepository = traceDossierJpaRepository;
	}

	public TraceDossierServiceMapper getEcheanceServiceMapper() {
		return traceDossierServiceMapper;
	}

	public void setEcheanceServiceMapper(TraceDossierServiceMapper traceDossierServiceMapper) {
		this.traceDossierServiceMapper = traceDossierServiceMapper;
	}

}
