/*
 * Created on 29 déc. 2015 ( Time 20:53:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.immo.bean.Bien;
import com.immo.bean.jpa.BienEntity;
import com.immo.bean.jpa.ReferenceEntity;
import com.immo.bean.jpa.TrancheEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class BienServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public BienServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'BienEntity' to 'Bien'
	 * @param bienEntity
	 */
	public Bien mapBienEntityToBien(BienEntity bienEntity) {
		if(bienEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Bien bien = map(bienEntity, Bien.class);

		//--- Link mapping ( link to Reference )
		if(bienEntity.getReference() != null) {
			bien.setBienReference(bienEntity.getReference().getId());
		}
		//--- Link mapping ( link to Tranche )
		if(bienEntity.getTranche() != null) {
			bien.setRefTranche(bienEntity.getTranche().getId());
		}
		return bien;
	}
	
	/**
	 * Mapping from 'Bien' to 'BienEntity'
	 * @param bien
	 * @param bienEntity
	 */
	public void mapBienToBienEntity(Bien bien, BienEntity bienEntity) {
		if(bien == null) {
			return;
		}

		//--- Generic mapping 
		map(bien, bienEntity);

		//--- Link mapping ( link : bien )
		if( hasLinkToReference(bien) ) {
			ReferenceEntity reference1 = new ReferenceEntity();
			reference1.setId( bien.getBienReference() );
			bienEntity.setReference( reference1 );
		} else {
			bienEntity.setReference( null );
		}

		//--- Link mapping ( link : bien )
		if( hasLinkToTranche(bien) ) {
			TrancheEntity tranche2 = new TrancheEntity();
			tranche2.setId( bien.getRefTranche() );
			bienEntity.setTranche( tranche2 );
		} else {
			bienEntity.setTranche( null );
		}

	}
	
	/**
	 * Verify that Reference id is valid.
	 * @param Reference Reference
	 * @return boolean
	 */
	private boolean hasLinkToReference(Bien bien) {
		if(bien.getBienReference() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Tranche id is valid.
	 * @param Tranche Tranche
	 * @return boolean
	 */
	private boolean hasLinkToTranche(Bien bien) {
		if(bien.getRefTranche() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}