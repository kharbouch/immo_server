/*
 * Created on 29 déc. 2015 ( Time 20:53:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.immo.bean.ModuleProfil;
import com.immo.bean.jpa.ModuleProfilEntity;
import com.immo.bean.jpa.ModuleEntity;
import com.immo.bean.jpa.ProfilEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ModuleProfilServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public ModuleProfilServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'ModuleProfilEntity' to 'ModuleProfil'
	 * @param moduleProfilEntity
	 */
	public ModuleProfil mapModuleProfilEntityToModuleProfil(ModuleProfilEntity moduleProfilEntity) {
		if(moduleProfilEntity == null) {
			return null;
		}

		//--- Generic mapping 
		ModuleProfil moduleProfil = map(moduleProfilEntity, ModuleProfil.class);

		//--- Link mapping ( link to Module )
		if(moduleProfilEntity.getModule() != null) {
			moduleProfil.setRefModule(moduleProfilEntity.getModule().getId());
		}
		//--- Link mapping ( link to Profil )
		if(moduleProfilEntity.getProfil() != null) {
			moduleProfil.setRefProfil(moduleProfilEntity.getProfil().getId());
		}
		return moduleProfil;
	}
	
	/**
	 * Mapping from 'ModuleProfil' to 'ModuleProfilEntity'
	 * @param moduleProfil
	 * @param moduleProfilEntity
	 */
	public void mapModuleProfilToModuleProfilEntity(ModuleProfil moduleProfil, ModuleProfilEntity moduleProfilEntity) {
		if(moduleProfil == null) {
			return;
		}

		//--- Generic mapping 
		map(moduleProfil, moduleProfilEntity);

		//--- Link mapping ( link : moduleProfil )
		if( hasLinkToModule(moduleProfil) ) {
			ModuleEntity module1 = new ModuleEntity();
			module1.setId( moduleProfil.getRefModule() );
			moduleProfilEntity.setModule( module1 );
		} else {
			moduleProfilEntity.setModule( null );
		}

		//--- Link mapping ( link : moduleProfil )
		if( hasLinkToProfil(moduleProfil) ) {
			ProfilEntity profil2 = new ProfilEntity();
			profil2.setId( moduleProfil.getRefProfil() );
			moduleProfilEntity.setProfil( profil2 );
		} else {
			moduleProfilEntity.setProfil( null );
		}

	}
	
	/**
	 * Verify that Module id is valid.
	 * @param Module Module
	 * @return boolean
	 */
	private boolean hasLinkToModule(ModuleProfil moduleProfil) {
		if(moduleProfil.getRefModule() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Profil id is valid.
	 * @param Profil Profil
	 * @return boolean
	 */
	private boolean hasLinkToProfil(ModuleProfil moduleProfil) {
		if(moduleProfil.getRefProfil() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}