/*
 * Created on 29 déc. 2015 ( Time 20:53:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.immo.bean.Reference;
import com.immo.bean.jpa.ReferenceEntity;
import com.immo.bean.jpa.ReferenceTypeEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ReferenceServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public ReferenceServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'ReferenceEntity' to 'Reference'
	 * @param referenceEntity
	 */
	public Reference mapReferenceEntityToReference(ReferenceEntity referenceEntity) {
		if(referenceEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Reference reference = map(referenceEntity, Reference.class);

		//--- Link mapping ( link to ReferenceType )
		if(referenceEntity.getReferenceType() != null) {
			reference.setRefTypeReference(referenceEntity.getReferenceType().getId());
		}
		return reference;
	}
	
	/**
	 * Mapping from 'Reference' to 'ReferenceEntity'
	 * @param reference
	 * @param referenceEntity
	 */
	public void mapReferenceToReferenceEntity(Reference reference, ReferenceEntity referenceEntity) {
		if(reference == null) {
			return;
		}

		//--- Generic mapping 
		map(reference, referenceEntity);

		//--- Link mapping ( link : reference )
		if( hasLinkToReferenceType(reference) ) {
			ReferenceTypeEntity referenceType1 = new ReferenceTypeEntity();
			referenceType1.setId( reference.getRefTypeReference() );
			referenceEntity.setReferenceType( referenceType1 );
		} else {
			referenceEntity.setReferenceType( null );
		}

	}
	
	/**
	 * Verify that ReferenceType id is valid.
	 * @param ReferenceType ReferenceType
	 * @return boolean
	 */
	private boolean hasLinkToReferenceType(Reference reference) {
		if(reference.getRefTypeReference() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}