/*
 * Created on 29 dï¿½c. 2015 ( Time 20:53:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.immo.bean.TraceDossier;
import com.immo.bean.UtilisateurTranche;
import com.immo.bean.jpa.TraceDossierEntity;
import com.immo.bean.jpa.UtilisateurEntity;
import com.immo.bean.jpa.BienEntity;
import com.immo.bean.jpa.DossierEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TraceDossierServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public TraceDossierServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'TraceDossierEntity' to 'TraceDossier'
	 * @param traceDossierEntity
	 */
	public TraceDossier mapTraceDossierEntityToTraceDossier(TraceDossierEntity traceDossierEntity) {
		if(traceDossierEntity == null) {
			return null;
		}

		//--- Generic mapping 
		TraceDossier traceDossier = map(traceDossierEntity, TraceDossier.class);

		//--- Link mapping ( link to Dossier )
		if(traceDossierEntity.getDossier() != null) {
			traceDossier.setRefDossier(traceDossierEntity.getDossier().getId());
		}
		return traceDossier;
	}
	
	/**
	 * Mapping from 'TraceDossier' to 'TraceDossierEntity'
	 * @param traceDossier
	 * @param traceDossierEntity
	 */
	public void mapTraceDossierToTraceDossierEntity(TraceDossier traceDossier, TraceDossierEntity traceDossierEntity) {
		if(traceDossier == null) {
			return;
		}

		//--- Generic mapping 
		map(traceDossier, traceDossierEntity);

		//--- Link mapping ( link : traceDossier )
		if( hasLinkToDossier(traceDossier) ) {
			DossierEntity dossier1 = new DossierEntity();
			dossier1.setId( traceDossier.getRefDossier() );
			traceDossierEntity.setDossier( dossier1 );
		} else {
			traceDossierEntity.setDossier( null );
		}
		
		//--- Link mapping ( link : traceDossier )
		if( hasLinkToBien(traceDossier) ) {
			BienEntity bien1 = new BienEntity();
			bien1.setId( traceDossier.getRefBien() );
			traceDossierEntity.setBien( bien1 );
		} else {
			traceDossierEntity.setBien( null );
		}
		
		//--- Link mapping ( link : traceDossier )
		if( hasLinkToUtilisateur(traceDossier) ) {
			UtilisateurEntity utilisateur2 = new UtilisateurEntity();
			utilisateur2.setId( traceDossier.getRefUser() );
			traceDossierEntity.setUtilisateur(utilisateur2);
		} else {
			traceDossierEntity.setUtilisateur( null );
		}

	}
	
	/**
	 * Verify that Dossier id is valid.
	 * @param Dossier Dossier
	 * @return boolean
	 */
	private boolean hasLinkToDossier(TraceDossier traceDossier) {
		if(traceDossier.getRefDossier() != null) {
			return true;
		}
		return false;
	}
	
	private boolean hasLinkToBien(TraceDossier traceDossier) {
		if(traceDossier.getRefBien() != null) {
			return true;
		}
		return false;
	}

	private boolean hasLinkToUtilisateur(TraceDossier traceDossier) {
		if(traceDossier.getRefUser() != null) {
			return true;
		}
		return false;
	}
	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}