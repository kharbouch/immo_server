/*
 * Created on 29 dï¿½c. 2015 ( Time 20:50:29 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.immo.bean.Bien;
import com.immo.bean.Module;
import com.immo.bean.Profil;
import com.immo.bean.Projet;
import com.immo.bean.Tranche;
import com.immo.business.service.BienService;
import com.immo.business.service.ProjetService;
import com.immo.web.listitem.BienListItem;

/**
 * Spring MVC controller for 'Bien' management.
 */
@Controller
public class BienRestController {

	@Resource
	private BienService bienService;
	
	@RequestMapping( value="/items/bien",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BienListItem> findAllAsListItems() {
		List<Bien> list = bienService.findAll();
		List<BienListItem> items = new LinkedList<BienListItem>();
		for ( Bien bien : list ) {
			items.add(new BienListItem( bien ) );
		}
		return items;
	}
	
	@RequestMapping( value="/bien",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Bien> findAll() {
		return bienService.findAll();
	}

	@RequestMapping( value="/bien/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Bien findOne(@PathVariable("id") Long id) {
		return bienService.findById(id);
	}
	
	@RequestMapping( value="/bien",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Bien create(@RequestBody Bien bien) {
		return bienService.create(bien);
	}

	@RequestMapping( value="/bien/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Bien update(@PathVariable("id") Long id, @RequestBody Bien bien) {
		return bienService.update(bien);
	}

	@RequestMapping( value="/bien/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		bienService.delete(id);
	}
	
	@RequestMapping( value="/bienByProjet",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Bien> findBienByProjet(@RequestBody Projet p) {		

		List<Bien> m = bienService.findBienByProjet(p);
		return m;
	}
	
	@RequestMapping( value="/bienByTranche",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Bien> findBienByTranche(@RequestBody Tranche t) {		

		List<Bien> m = bienService.findBienByTranche(t);
		return m;
	}
	
	@RequestMapping( value="/etatbien",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Object> etatBien() {
		return bienService.etatBien();
	}
}
