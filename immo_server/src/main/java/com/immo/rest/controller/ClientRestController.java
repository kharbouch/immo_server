/*
 * Created on 29 dï¿½c. 2015 ( Time 20:50:30 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.immo.bean.Client;
import com.immo.bean.InfoDossier;
import com.immo.business.service.ClientService;
import com.immo.web.listitem.ClientListItem;

/**
 * Spring MVC controller for 'Client' management.
 */
@Controller
public class ClientRestController {

	@Resource
	private ClientService clientService;
	
	@RequestMapping( value="/items/client",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ClientListItem> findAllAsListItems() {
		List<Client> list = clientService.findAll();
		List<ClientListItem> items = new LinkedList<ClientListItem>();
		for ( Client client : list ) {
			items.add(new ClientListItem( client ) );
		}
		return items;
	}
	
	@RequestMapping( value="/client",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Client> findAll() {
		return clientService.findAll();
	}

	@RequestMapping( value="/client/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Client findOne(@PathVariable("id") Long id) {
		return clientService.findById(id);
	}
	
	@RequestMapping( value="/client",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Client create(@RequestBody Client client) {
		 Client c = clientService.clientByCin(client.getCinClient(), client.getQuote());
		if(c == null)
			return clientService.create(client);
		else
			return c;
	}

	@RequestMapping( value="/client/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Client update(@PathVariable("id") Long id, @RequestBody Client client) {
		return clientService.update(client);
	}

	@RequestMapping( value="/client/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		clientService.delete(id);
	}
	
	@RequestMapping( value="/clientByCin/{cin}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Client findDossier(@PathVariable("cin") String cin) {
		return clientService.clientByCin(cin, null);
	}
}
