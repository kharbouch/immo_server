/*
 * Created on 29 dï¿½c. 2015 ( Time 20:50:39 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import com.immo.bean.Client;
import com.immo.bean.Dossier;
import com.immo.bean.DossierClient;
import com.immo.bean.Module;
import com.immo.bean.Profil;
import com.immo.business.service.DossierClientService;
import com.immo.web.listitem.DossierClientListItem;

/**
 * Spring MVC controller for 'DossierClient' management.
 */
@Controller
public class DossierClientRestController {

	@Resource
	private DossierClientService dossierClientService;
	
	@RequestMapping( value="/items/dossierClient",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<DossierClientListItem> findAllAsListItems() {
		List<DossierClient> list = dossierClientService.findAll();
		List<DossierClientListItem> items = new LinkedList<DossierClientListItem>();
		for ( DossierClient dossierClient : list ) {
			items.add(new DossierClientListItem( dossierClient ) );
		}
		return items;
	}
	
	@RequestMapping( value="/dossierClient",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<DossierClient> findAll() {
		return dossierClientService.findAll();
	}

	@RequestMapping( value="/dossierClient/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public DossierClient findOne(@PathVariable("id") Long id) {
		return dossierClientService.findById(id);
	}
	
	
	
	// FindByDossier
	@RequestMapping( value="/dossierClientRef/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<DossierClient> findByDossier(@PathVariable("id") Long id) {
		return dossierClientService.findByDossier(id);
	}
	
	
	
	
	@RequestMapping( value="/dossierClient",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public DossierClient create(@RequestBody DossierClient dossierClient) {
		return dossierClientService.create(dossierClient);
	}

	@RequestMapping( value="/dossierClient/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public DossierClient update(@PathVariable("id") Long id, @RequestBody DossierClient dossierClient) {
		return dossierClientService.update(dossierClient);
	}

	@RequestMapping( value="/dossierClient/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		dossierClientService.delete(id);
	}
	
	@RequestMapping( value="/dossierByClient",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Client> findClientByDossier(@RequestBody Dossier d) {		

		List<Client> m = dossierClientService.findClientByDossier(d);
		return m;
	}
	
}
