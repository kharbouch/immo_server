/*
 * Created on 29 déc. 2015 ( Time 20:50:39 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.immo.bean.Module;
import com.immo.business.service.ModuleService;
import com.immo.web.listitem.ModuleListItem;

/**
 * Spring MVC controller for 'Module' management.
 */
@Controller
public class ModuleRestController {

	@Resource
	private ModuleService moduleService;
	
	@RequestMapping( value="/items/module",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ModuleListItem> findAllAsListItems() {
		List<Module> list = moduleService.findAll();
		List<ModuleListItem> items = new LinkedList<ModuleListItem>();
		for ( Module module : list ) {
			items.add(new ModuleListItem( module ) );
		}
		return items;
	}
	
	@RequestMapping( value="/module",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Module> findAll() {
		return moduleService.findAll();
	}

	@RequestMapping( value="/module/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Module findOne(@PathVariable("id") Long id) {
		return moduleService.findById(id);
	}
	
	@RequestMapping( value="/module",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Module create(@RequestBody Module module) {
		return moduleService.create(module);
	}

	@RequestMapping( value="/module/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Module update(@PathVariable("id") Long id, @RequestBody Module module) {
		return moduleService.update(module);
	}

	@RequestMapping( value="/module/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		moduleService.delete(id);
	}
	
}
