/*
 * Created on 29 déc. 2015 ( Time 20:53:07 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.immo.bean.Profil;
import com.immo.business.service.ProfilService;
import com.immo.web.listitem.ProfilListItem;

/**
 * Spring MVC controller for 'Profil' management.
 */
@Controller
public class ProfilRestController {

	@Resource
	private ProfilService profilService;
	
	@RequestMapping( value="/items/profil",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ProfilListItem> findAllAsListItems() {
		List<Profil> list = profilService.findAll();
		List<ProfilListItem> items = new LinkedList<ProfilListItem>();
		for ( Profil profil : list ) {
			items.add(new ProfilListItem( profil ) );
		}
		return items;
	}
	
	@RequestMapping( value="/profil",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Profil> findAll() {
		return profilService.findAll();
	}

	@RequestMapping( value="/profil/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Profil findOne(@PathVariable("id") Long id) {
		return profilService.findById(id);
	}
	
	@RequestMapping( value="/profil",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Profil create(@RequestBody Profil profil) {
		return profilService.create(profil);
	}

	@RequestMapping( value="/profil/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Profil update(@PathVariable("id") Long id, @RequestBody Profil profil) {
		return profilService.update(profil);
	}

	@RequestMapping( value="/profil/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		profilService.delete(id);
	}
	
}
