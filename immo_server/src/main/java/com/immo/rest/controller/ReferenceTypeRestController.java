/*
 * Created on 29 déc. 2015 ( Time 20:53:10 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.immo.bean.ReferenceType;
import com.immo.business.service.ReferenceTypeService;
import com.immo.web.listitem.ReferenceTypeListItem;

/**
 * Spring MVC controller for 'ReferenceType' management.
 */
@Controller
public class ReferenceTypeRestController {

	@Resource
	private ReferenceTypeService referenceTypeService;
	
	@RequestMapping( value="/items/referenceType",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ReferenceTypeListItem> findAllAsListItems() {
		List<ReferenceType> list = referenceTypeService.findAll();
		List<ReferenceTypeListItem> items = new LinkedList<ReferenceTypeListItem>();
		for ( ReferenceType referenceType : list ) {
			items.add(new ReferenceTypeListItem( referenceType ) );
		}
		return items;
	}
	
	@RequestMapping( value="/referenceType",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ReferenceType> findAll() {
		return referenceTypeService.findAll();
	}

	@RequestMapping( value="/referenceType/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ReferenceType findOne(@PathVariable("id") Long id) {
		return referenceTypeService.findById(id);
	}
	
	@RequestMapping( value="/referenceType",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ReferenceType create(@RequestBody ReferenceType referenceType) {
		return referenceTypeService.create(referenceType);
	}

	@RequestMapping( value="/referenceType/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ReferenceType update(@PathVariable("id") Long id, @RequestBody ReferenceType referenceType) {
		return referenceTypeService.update(referenceType);
	}

	@RequestMapping( value="/referenceType/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		referenceTypeService.delete(id);
	}
	
}
