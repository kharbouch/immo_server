/*
 * Created on 29 dï¿½c. 2015 ( Time 20:53:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.rest.controller;

import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.ExecutionException;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.immo.bean.Utilisateur;
import com.immo.business.service.UtilisateurService;
import com.immo.web.listitem.UtilisateurListItem;

/**
 * Spring MVC controller for 'Utilisateur' management.
 */
@Controller
public class UtilisateurRestController {

	@Resource
	private UtilisateurService utilisateurService;
	
	@RequestMapping( value="/items/utilisateur",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UtilisateurListItem> findAllAsListItems() {
		List<Utilisateur> list = utilisateurService.findAll();
		List<UtilisateurListItem> items = new LinkedList<UtilisateurListItem>();
		for ( Utilisateur utilisateur : list ) {
			items.add(new UtilisateurListItem( utilisateur ) );
		}
		return items;
	}
	
	@RequestMapping( value="/utilisateur",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Utilisateur> findAll() {
		return utilisateurService.findAll();
	}

	@RequestMapping( value="/utilisateur/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Utilisateur findOne(@PathVariable("id") Long id) {
		return utilisateurService.findById(id);
	}
	
	@RequestMapping( value="/utilisateur",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Utilisateur create(@RequestBody Utilisateur utilisateur) {
		return utilisateurService.create(utilisateur);
	}

	@RequestMapping( value="/utilisateur/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Utilisateur update(@PathVariable("id") Long id, @RequestBody Utilisateur utilisateur) {
		return utilisateurService.update(utilisateur);
	}

	@RequestMapping( value="/utilisateur/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		utilisateurService.delete(id);
	}
	
	@RequestMapping( value="/login",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Utilisateur findByUserNameAndPass(@RequestBody Utilisateur utilisateur) throws InterruptedException, ExecutionException {
		/*System.out.println("val de mail :"+ mail);
		if(mail.contains("m@m")) return true;
		System.out.println("la val de user : " +utilisateur.getLogin() + utilisateur.getPassword());
		System.out.println(utilisateurService.findByUserNameAndPass(utilisateur));*/
		return utilisateurService.findByUserNameAndPass(utilisateur);
	
	}
	
}
