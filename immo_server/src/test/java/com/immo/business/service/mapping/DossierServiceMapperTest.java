/*
 * Created on 29 déc. 2015 ( Time 20:53:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.immo.bean.Dossier;
import com.immo.bean.jpa.DossierEntity;
import com.immo.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class DossierServiceMapperTest {

	private DossierServiceMapper dossierServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		dossierServiceMapper = new DossierServiceMapper();
		dossierServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'DossierEntity' to 'Dossier'
	 * @param dossierEntity
	 */
	@Test
	public void testMapDossierEntityToDossier() {
		// Given
		DossierEntity dossierEntity = new DossierEntity();
		dossierEntity.setRefBien(mockValues.nextLong());
		dossierEntity.setCommercial(mockValues.nextString(100));
		dossierEntity.setEtat(mockValues.nextString(100));
		dossierEntity.setRefProjet(mockValues.nextLong());
		dossierEntity.setRefTranche(mockValues.nextLong());
		dossierEntity.setTypeDesistement(mockValues.nextLong());
		dossierEntity.setDateDesistement(mockValues.nextLong());
		dossierEntity.setNumDossDoc(mockValues.nextString(100));
		dossierEntity.setRefConvention(mockValues.nextLong());
		dossierEntity.setNumVenteProjet(mockValues.nextLong());
		dossierEntity.setDateCreation(mockValues.nextDate());
		dossierEntity.setDateMaj(mockValues.nextDate());
		
		// When
		Dossier dossier = dossierServiceMapper.mapDossierEntityToDossier(dossierEntity);
		
		// Then
		assertEquals(dossierEntity.getRefBien(), dossier.getRefBien());
		assertEquals(dossierEntity.getCommercial(), dossier.getCommercial());
		assertEquals(dossierEntity.getEtat(), dossier.getEtat());
		assertEquals(dossierEntity.getRefProjet(), dossier.getRefProjet());
		assertEquals(dossierEntity.getRefTranche(), dossier.getRefTranche());
		assertEquals(dossierEntity.getTypeDesistement(), dossier.getTypeDesistement());
		assertEquals(dossierEntity.getDateDesistement(), dossier.getDateDesistement());
		assertEquals(dossierEntity.getNumDossDoc(), dossier.getNumDossDoc());
		assertEquals(dossierEntity.getRefConvention(), dossier.getRefConvention());
		assertEquals(dossierEntity.getNumVenteProjet(), dossier.getNumVenteProjet());
		assertEquals(dossierEntity.getDateCreation(), dossier.getDateCreation());
		assertEquals(dossierEntity.getDateMaj(), dossier.getDateMaj());
	}
	
	/**
	 * Test : Mapping from 'Dossier' to 'DossierEntity'
	 */
	@Test
	public void testMapDossierToDossierEntity() {
		// Given
		Dossier dossier = new Dossier();
		dossier.setRefBien(mockValues.nextLong());
		dossier.setCommercial(mockValues.nextString(100));
		dossier.setEtat(mockValues.nextString(100));
		dossier.setRefProjet(mockValues.nextLong());
		dossier.setRefTranche(mockValues.nextLong());
		dossier.setTypeDesistement(mockValues.nextLong());
		dossier.setDateDesistement(mockValues.nextLong());
		dossier.setNumDossDoc(mockValues.nextString(100));
		dossier.setRefConvention(mockValues.nextLong());
		dossier.setNumVenteProjet(mockValues.nextLong());
		dossier.setDateCreation(mockValues.nextDate());
		dossier.setDateMaj(mockValues.nextDate());

		DossierEntity dossierEntity = new DossierEntity();
		
		// When
		dossierServiceMapper.mapDossierToDossierEntity(dossier, dossierEntity);
		
		// Then
		assertEquals(dossier.getRefBien(), dossierEntity.getRefBien());
		assertEquals(dossier.getCommercial(), dossierEntity.getCommercial());
		assertEquals(dossier.getEtat(), dossierEntity.getEtat());
		assertEquals(dossier.getRefProjet(), dossierEntity.getRefProjet());
		assertEquals(dossier.getRefTranche(), dossierEntity.getRefTranche());
		assertEquals(dossier.getTypeDesistement(), dossierEntity.getTypeDesistement());
		assertEquals(dossier.getDateDesistement(), dossierEntity.getDateDesistement());
		assertEquals(dossier.getNumDossDoc(), dossierEntity.getNumDossDoc());
		assertEquals(dossier.getRefConvention(), dossierEntity.getRefConvention());
		assertEquals(dossier.getNumVenteProjet(), dossierEntity.getNumVenteProjet());
		assertEquals(dossier.getDateCreation(), dossierEntity.getDateCreation());
		assertEquals(dossier.getDateMaj(), dossierEntity.getDateMaj());
	}

}