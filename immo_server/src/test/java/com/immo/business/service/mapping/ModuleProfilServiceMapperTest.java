/*
 * Created on 29 déc. 2015 ( Time 20:53:41 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.immo.bean.ModuleProfil;
import com.immo.bean.jpa.ModuleProfilEntity;
import com.immo.bean.jpa.ModuleEntity;
import com.immo.bean.jpa.ProfilEntity;
import com.immo.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ModuleProfilServiceMapperTest {

	private ModuleProfilServiceMapper moduleProfilServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		moduleProfilServiceMapper = new ModuleProfilServiceMapper();
		moduleProfilServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ModuleProfilEntity' to 'ModuleProfil'
	 * @param moduleProfilEntity
	 */
	@Test
	public void testMapModuleProfilEntityToModuleProfil() {
		// Given
		ModuleProfilEntity moduleProfilEntity = new ModuleProfilEntity();
		moduleProfilEntity.setDateCreation(mockValues.nextDate());
		moduleProfilEntity.setDateMaj(mockValues.nextDate());
		moduleProfilEntity.setModule(new ModuleEntity());
		moduleProfilEntity.getModule().setId(mockValues.nextLong());
		moduleProfilEntity.setProfil(new ProfilEntity());
		moduleProfilEntity.getProfil().setId(mockValues.nextLong());
		
		// When
		ModuleProfil moduleProfil = moduleProfilServiceMapper.mapModuleProfilEntityToModuleProfil(moduleProfilEntity);
		
		// Then
		assertEquals(moduleProfilEntity.getDateCreation(), moduleProfil.getDateCreation());
		assertEquals(moduleProfilEntity.getDateMaj(), moduleProfil.getDateMaj());
		assertEquals(moduleProfilEntity.getModule().getId(), moduleProfil.getRefModule());
		assertEquals(moduleProfilEntity.getProfil().getId(), moduleProfil.getRefProfil());
	}
	
	/**
	 * Test : Mapping from 'ModuleProfil' to 'ModuleProfilEntity'
	 */
	@Test
	public void testMapModuleProfilToModuleProfilEntity() {
		// Given
		ModuleProfil moduleProfil = new ModuleProfil();
		moduleProfil.setDateCreation(mockValues.nextDate());
		moduleProfil.setDateMaj(mockValues.nextDate());
		moduleProfil.setRefModule(mockValues.nextLong());
		moduleProfil.setRefProfil(mockValues.nextLong());

		ModuleProfilEntity moduleProfilEntity = new ModuleProfilEntity();
		
		// When
		moduleProfilServiceMapper.mapModuleProfilToModuleProfilEntity(moduleProfil, moduleProfilEntity);
		
		// Then
		assertEquals(moduleProfil.getDateCreation(), moduleProfilEntity.getDateCreation());
		assertEquals(moduleProfil.getDateMaj(), moduleProfilEntity.getDateMaj());
		assertEquals(moduleProfil.getRefModule(), moduleProfilEntity.getModule().getId());
		assertEquals(moduleProfil.getRefProfil(), moduleProfilEntity.getProfil().getId());
	}

}