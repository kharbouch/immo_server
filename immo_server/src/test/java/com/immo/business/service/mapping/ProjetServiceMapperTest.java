/*
 * Created on 29 dï¿½c. 2015 ( Time 20:53:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.immo.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.immo.bean.Projet;
import com.immo.bean.jpa.ProjetEntity;
import com.immo.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class ProjetServiceMapperTest {

	private ProjetServiceMapper projetServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		projetServiceMapper = new ProjetServiceMapper();
		projetServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'ProjetEntity' to 'Projet'
	 * @param projetEntity
	 */
	@Test
	public void testMapProjetEntityToProjet() {
		// Given
		ProjetEntity projetEntity = new ProjetEntity();
		projetEntity.setLibelle(mockValues.nextString(100));
		projetEntity.setDescription(mockValues.nextString(200));
		projetEntity.setVilleProjet(mockValues.nextLong());
		projetEntity.setDateCreation(mockValues.nextDate());
		projetEntity.setDateMaj(mockValues.nextDate());
		projetEntity.setCodeProjet(mockValues.nextString(30));
		
		// When
		Projet projet = projetServiceMapper.mapProjetEntityToProjet(projetEntity);
		
		// Then
		assertEquals(projetEntity.getLibelle(), projet.getLibelle());
		assertEquals(projetEntity.getDescription(), projet.getDescription());
		assertEquals(projetEntity.getVilleProjet(), projet.getVilleProjet());
		assertEquals(projetEntity.getDateCreation(), projet.getDateCreation());
		assertEquals(projetEntity.getDateMaj(), projet.getDateMaj());
		assertEquals(projetEntity.getCodeProjet(), projet.getCodeProjet());
	}
	
	/**
	 * Test : Mapping from 'Projet' to 'ProjetEntity'
	 */
	@Test
	public void testMapProjetToProjetEntity() {
		// Given
		Projet projet = new Projet();
		projet.setLibelle(mockValues.nextString(100));
		projet.setDescription(mockValues.nextString(200));
		projet.setVilleProjet(mockValues.nextLong());
		projet.setDateCreation(mockValues.nextDate());
		projet.setDateMaj(mockValues.nextDate());
		projet.setCodeProjet(mockValues.nextString(30));

		ProjetEntity projetEntity = new ProjetEntity();
		
		// When
		projetServiceMapper.mapProjetToProjetEntity(projet, projetEntity);
		
		// Then
		assertEquals(projet.getLibelle(), projetEntity.getLibelle());
		assertEquals(projet.getDescription(), projetEntity.getDescription());
		assertEquals(projet.getVilleProjet(), projetEntity.getVilleProjet());
		assertEquals(projet.getDateCreation(), projetEntity.getDateCreation());
		assertEquals(projet.getDateMaj(), projetEntity.getDateMaj());
		assertEquals(projet.getCodeProjet(), projetEntity.getCodeProjet());
	}

}